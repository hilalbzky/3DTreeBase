{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","app.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","extensionMultiDraw","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","getDimensions","VideoFrame","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix$1","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","_three","require","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","valueOf","ReferenceError","subClass","superClass","_setPrototypeOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","performCursorZoom","clampDistance","prevRadius","newRadius","radiusDelta","dollyDirection","mouseBefore","mouse","prevZoom","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","getRootNode","interceptControlDown","capture","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","normalizedDelta","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dist","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","isTrackingPointer","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","customWheelEvent","deltaMode","newEvent","interceptControlUp","passive","trackPointer","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","orbit","gridHelper","axesHelper","animate","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '162';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[MORPHTARGETS_COUNT];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t#endif\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\t#endif\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tfloat startCompression = 0.8 - 0.04;\\n\\tfloat desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min(color.r, min(color.g, color.b));\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max(color.r, max(color.g, color.b));\\n\\tif (peak < startCompression) return color;\\n\\tfloat d = 1. - startCompression;\\n\\tfloat newPeak = 1. - d * d / (peak + d - startCompression);\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\\n\\treturn mix(color, vec3(1, 1, 1), g);\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t\t} else {\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.alphaToCoverage || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\t`;\n\n\tif ( parameters.isWebGL2 ) {\n\n\t\tprecisionstring += `precision ${parameters.precision} sampler3D;\n\t\tprecision ${parameters.precision} sampler2DArray;\n\t\tprecision ${parameters.precision} sampler2DShadow;\n\t\tprecision ${parameters.precision} samplerCubeShadow;\n\t\tprecision ${parameters.precision} sampler2DArrayShadow;\n\t\tprecision ${parameters.precision} isampler2D;\n\t\tprecision ${parameters.precision} isampler3D;\n\t\tprecision ${parameters.precision} isamplerCube;\n\t\tprecision ${parameters.precision} isampler2DArray;\n\t\tprecision ${parameters.precision} usampler2D;\n\t\tprecision ${parameters.precision} usampler3D;\n\t\tprecision ${parameters.precision} usamplerCube;\n\t\tprecision ${parameters.precision} usampler2DArray;\n\t\t`;\n\n\t}\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else if ( extensions.has( 'WEBGL_draw_buffers' ) === true ) {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * dimensions.width );\n\t\t\t\tconst height = floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\treturn isPowerOfTwo( dimensions.width ) && isPowerOfTwo( dimensions.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.textures;\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\trender( renderer, cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\textensions: { fragDepth: true },\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.mesh, cameraXR );\n\n\t\t}\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdepthSensing.render( renderer, cameraXR );\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tif ( xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false ) {\n\n\t\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = Math.round( sourceBox.max.x - sourceBox.min.x );\n\t\t\tconst height = Math.round( sourceBox.max.y - sourceBox.min.y );\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst prevRadius = spherical.radius;\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tlet controlActive = false;\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( isTrackingPointer( event ) ) return;\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\n\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction customWheelEvent( event ) {\n\n\t\t\tconst mode = event.deltaMode;\n\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\t\tconst newEvent = {\n\t\t\t\tclientX: event.clientX,\n\t\t\t\tclientY: event.clientY,\n\t\t\t\tdeltaY: event.deltaY,\n\t\t\t};\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 1: // LINE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // PAGE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// detect if event was triggered by pinching\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\n\n\t\t\t\tnewEvent.deltaY *= 10;\n\n\t\t\t}\n\n\t\t\treturn newEvent;\n\n\t\t}\n\n\t\tfunction interceptControlDown( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = true;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interceptControlUp( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = false;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTrackingPointer( event ) {\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n\r\nconst renderer = new THREE.WebGLRenderer({antialias: true});\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\n// Sets the color of the background\r\nrenderer.setClearColor(0xFEFEFE);\r\n\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(\r\n    45,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n);\r\n\r\n// Sets orbit control to move the camera around\r\nconst orbit = new OrbitControls(camera, renderer.domElement);\r\n\r\n// Camera positioning\r\ncamera.position.set(6, 8, 14);\r\norbit.update();\r\n\r\n// Sets a 12 by 12 gird helper\r\nconst gridHelper = new THREE.GridHelper(12, 12);\r\nscene.add(gridHelper);\r\n\r\n// Sets the x, y, and z axes with each having a length of 4\r\nconst axesHelper = new THREE.AxesHelper(4);\r\nscene.add(axesHelper);\r\n\r\nfunction animate() {\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nrenderer.setAnimationLoop(animate);\r\n\r\nwindow.addEventListener('resize', function() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}